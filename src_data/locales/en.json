{
  "values": {
    "logo": "OpenTherm Gateway",
    "nav": {
      "license": "License",
      "source": "Source code",
      "help": "Help",
      "issues": "Issues & questions",
      "releases": "Releases"
    },
    "dbm": "dBm",
    "kw": "kW",
    "time": {
      "days": "d.",
      "hours": "h.",
      "min": "min.",
      "sec": "sec."
    },

    "button": {
      "upgrade": "Upgrade",
      "restart": "Restart",
      "save": "Save",
      "saved": "Saved",
      "refresh": "Refresh",
      "restore": "Restore",
      "restored": "Restored",
      "backup": "Backup",
      "wait": "Please wait...",
      "uploading": "Uploading...",
      "success": "Success",
      "error": "Error"
    },

    "index": {
      "title": "OpenTherm Gateway",

      "section": {
        "network": "Network",
        "system": "System"
      },

      "system": {
        "build": {
          "title": "Build",
          "version": "Version",
          "date": "Date",
          "core": "Core",
          "sdk": "SDK"
        },
        "uptime": "Uptime",
        "memory": {
          "title": "Free memory",
          "maxFreeBlock": "max free block",
          "min": "min"
        },
        "board": "Board",
        "chip": {
          "model": "Chip",
          "cores": "Cores",
          "freq": "frequency"
        },
        "flash": {
          "size": "Flash size",
          "realSize": "real size"
        },
        "lastResetReason": "Last reset reason"
      }
    },

    "dashboard": {
      "name": "Dashboard",
      "title": "Dashboard - OpenTherm Gateway",

      "section": {
        "control": "Control",
        "states": "States and sensors",
        "otDiag": "OpenTherm diagnostic"
      },

      "thermostat": {
        "heating": "Heating",
        "dhw": "DHW",
        "temp.current": "Current",
        "enable": "Enable",
        "turbo": "Turbo mode"
      },

      "state": {
        "ot": "OpenTherm connected",
        "mqtt": "MQTT connected",
        "emergency": "Emergency",
        "heating": "Heating",
        "dhw": "DHW",
        "flame": "Flame",
        "fault": "Fault",
        "diag": "Diagnostic",
        "extpump": "External pump",
        "outdoorSensorConnected": "Outdoor sensor connected",
        "outdoorSensorRssi": "Outdoor sensor RSSI",
        "outdoorSensorHumidity": "Outdoor sensor humidity",
        "outdoorSensorBattery": "Outdoor sensor battery",
        "indoorSensorConnected": "Indoor sensor connected",
        "cascadeControlInput": "Cascade control (input)",
        "cascadeControlOutput": "Cascade control (output)",
        "indoorSensorRssi": "Indoor sensor RSSI",
        "indoorSensorHumidity": "Indoor sensor humidity",
        "indoorSensorBattery": "Indoor sensor battery",
        "modulation": "Modulation",
        "pressure": "Pressure",
        "dhwFlowRate": "DHW flow rate",
        "power": "Current power",
        "faultCode": "Fault code",
        "diagCode": "Diagnostic code",
        "indoorTemp": "Indoor temp",
        "outdoorTemp": "Outdoor temp",
        "heatingTemp": "Heating temp",
        "heatingSetpointTemp": "Heating setpoint temp",
        "heatingReturnTemp": "Heating return temp",
        "dhwTemp": "DHW temp",
        "exhaustTemp": "Exhaust temp"
      }
    },

    "network": {
      "title": "Network - OpenTherm Gateway",
      "name": "Network settings",

      "section": {
        "static": "Static settings",
        "availableNetworks": "Available networks",
        "staSettings": "WiFi settings",
        "apSettings": "AP settings"
      },

      "scan": {
        "pos": "#",
        "info": "Info"
      },

      "wifi": {
        "ssid": "SSID",
        "password": "Password",
        "channel": "Channel",
        "signal": "Signal",
        "connected": "Connected"
      },

      "params": {
        "hostname": "Hostname",
        "dhcp": "Use DHCP",
        "mac": "MAC",
        "ip": "IP",
        "subnet": "Subnet",
        "gateway": "Gateway",
        "dns": "DNS"
      },

      "sta": {
        "channel.note": "set 0 for auto select"
      }
    },

    "settings": {
      "title": "Settings - OpenTherm Gateway",
      "name": "Settings",

      "section": {
        "portal": "Portal settings",
        "system": "System settings",
        "diag": "Diagnostic",
        "heating": "Heating settings",
        "dhw": "DHW settings",
        "emergency": "Emergency mode settings",
        "equitherm": "Equitherm settings",
        "pid": "PID settings",
        "ot": "OpenTherm settings",
        "mqtt": "MQTT settings",
        "outdorSensor": "Outdoor sensor settings",
        "indoorSensor": "Indoor sensor settings",
        "extPump": "External pump settings",
        "cascadeControl": "Cascade control settings"
      },

      "enable": "Enable",
      "note": {
        "restart": "After changing these settings, the device must be restarted for the changes to take effect.",
        "blankNotUse": "blank - not use",
        "bleDevice": "BLE device can be used <u>only</u> with some ESP32 boards with BLE support!"
      },

      "temp": {
        "min": "Minimum temperature",
        "max": "Maximum temperature"
      },

      "portal": {
        "login": "Login",
        "password": "Password",
        "auth": "Require authentication"
      },

      "system": {
        "unit": "Unit system",
        "metric": "Metric <small>(celsius, liters, bar)</small>",
        "imperial": "Imperial <small>(fahrenheit, gallons, psi)</small>",
        "statusLedGpio": "Status LED GPIO",
        "logLevel": "Log level",
        "serial": {
          "enable": "Enable Serial port",
          "baud": "Serial port baud rate"
        },
        "telnet": {
          "enable": "Enable Telnet",
          "port": {
            "title": "Telnet port",
            "note": "Default: 23"
          }
        }
      },

      "heating": {
        "hyst": "Hysteresis <small>(in degrees)</small>"
      },

      "emergency": {
        "desc": "<b>!</b> Emergency mode can be useful <u>only</u> when using Equitherm and/or PID (when normal work) and when reporting indoor/outdoor temperature via MQTT/API/BLE. In this mode, sensor values that are reported via MQTT/API/BLE are not used.",
        
        "target": {
          "title": "Target temperature",
          "note": "<u>Indoor temperature</u> if Equitherm or PID is <b>enabled</b><br /><u>Heat carrier temperature</u> if Equitherm and PID <b>is disabled</b>"
        },
        "treshold": "Treshold time <small>(sec)</small>",

        "events": {
          "desc": "Events",
          "network": "On network fault",
          "mqtt": "On MQTT fault",
          "indoorSensorDisconnect": "On loss connection with indoor sensor",
          "outdoorSensorDisconnect": "On loss connection with outdoor sensor"
        },

        "regulators": {
          "desc": "Using regulators",
          "equitherm": "Equitherm <small>(requires at least an external (DS18B20) or boiler <u>outdoor</u> sensor)</small>",
          "pid": "PID <small>(requires at least an external (DS18B20) <u>indoor</u> sensor)</small>"
        }
      },

      "equitherm": {
        "n": "N factor",
        "k": "K factor",
        "t": {
          "title": "T factor",
          "note": "Not used if PID is enabled"
        }
      },

      "pid": {
        "p": "P factor",
        "i": "I factor",
        "d": "D factor",
        "dt": "DT <small>in seconds</small>"
      },

      "ot": {
        "advanced": "Advanced Settings",
        "inGpio": "In GPIO",
        "outGpio": "Out GPIO",
        "ledGpio": "RX LED GPIO",
        "memberIdCode": "Master MemberID code",
        "maxMod": "Max modulation level",
        "pressureFactor": {
          "title": "Coeff. pressure correction",
          "note": "If the pressure displayed is <b>X10</b> from the real one, set the <b>0.1</b>."
        },
        "dhwFlowRateFactor": {
          "title": "Coeff. DHW flow rate correction",
          "note": "If the DHW flow rate displayed is <b>X10</b> from the real one, set the <b>0.1</b>."
        },
        "minPower": {
          "title": "Min boiler power <small>(kW)</small>",
          "note": "This value is at 0-1% boiler modulation level. Typically found in the boiler specification as \"minimum useful heat output\"."
        },
        "maxPower": {
          "title": "Max boiler power <small>(kW)</small>",
          "note": "<b>0</b> - try detect automatically. Typically found in the boiler specification as \"maximum useful heat output\"."
        },
        "fnv": {
          "desc": "Filtering numeric values",
          "enable": {
            "title": "Enable filtering",
            "note": "It can be useful if there is a lot of sharp noise on the charts. The filter used is \"Running Average\"."
          },
          "factor": {
            "title": "Filtration coeff.",
            "note": "The lower the value, the smoother and <u>longer</u> the change in numeric values."
          }
        },

        "options": {
          "desc": "Options",
          "dhwPresent": "DHW present",
          "summerWinterMode": "Summer/winter mode",
          "heatingCh2Enabled": "Heating CH2 always enabled",
          "heatingCh1ToCh2": "Duplicate heating CH1 to CH2",
          "dhwToCh2": "Duplicate DHW to CH2",
          "dhwBlocking": "DHW blocking",
          "modulationSyncWithHeating": "Sync modulation with heating",
          "getMinMaxTemp": "Get min/max temp from boiler",
          "immergasFix": "Fix for Immergas boilers"
        },

        "nativeHeating": {
          "title": "Native heating control (boiler)",
          "note": "Works <u>ONLY</u> if the boiler requires the desired room temperature and regulates the temperature of the coolant itself. Not compatible with PID and Equitherm regulators and hysteresis in firmware."
        }
      },

      "mqtt": {
        "homeAssistantDiscovery": "Home Assistant Discovery",
        "server": "Server",
        "port": "Port",
        "user": "User",
        "password": "Password",
        "prefix": "Prefix",
        "interval": "Publish interval <small>(sec)</small>"
      },

      "tempSensor": {
        "source": {
          "type": "Source type",
          "boiler": "From boiler via OpenTherm",
          "manual": "Manual via MQTT/API",
          "ext": "External (DS18B20)",
          "ble": "BLE device"
        },
        "gpio": "GPIO",
        "offset": "Temp offset <small>(calibration)</small>",
        "bleAddress": "BLE device MAC address"
      },

      "extPump": {
        "use": "Use external pump",
        "gpio": "Relay GPIO",
        "postCirculationTime": "Post circulation time <small>(min)</small>",
        "antiStuckInterval": "Anti stuck interval <small>(days)</small>",
        "antiStuckTime": "Anti stuck time <small>(min)</small>"
      },

      "cascadeControl": {
        "input": {
          "desc": "Can be used to turn on the heating only if another boiler is faulty. The other boiler controller must change the state of the GPIO input in the event of a fault.",
          "enable": "Enable input",
          "gpio": "GPIO",
          "invertState": "Invert GPIO state",
          "thresholdTime": "State change threshold time <small>(sec)</small>"
        },
        "output": {
          "desc": "Can be used to switch on another boiler <u>via relay</u>.",
          "enable": "Enable output",
          "gpio": "GPIO",
          "invertState": "Invert GPIO state",
          "thresholdTime": "State change threshold time <small>(sec)</small>",
          "events": {
            "desc": "Events",
            "onFault": "If the fault state is active",
            "onLossConnection": "If the connection via Opentherm is lost",
            "onEnabledHeating": "If heating is enabled"
          }
        }
      }
    },

    "upgrade": {
      "title": "Upgrade - OpenTherm Gateway",
      "name": "Upgrade",

      "section": {
        "backupAndRestore": "Backup & restore",
        "backupAndRestore.desc": "In this section you can save and restore a backup of ALL settings.",
        "upgrade": "Upgrade",
        "upgrade.desc": "In this section you can upgrade the firmware and filesystem of your device.<br />Latest releases can be downloaded from the <a href=\"https://github.com/Laxilef/OTGateway/releases\" target=\"_blank\">Releases page</a> of the project repository." 
      },

      "note": {
        "disclaimer1": "After a successful upgrade the filesystem, ALL settings will be reset to default values! Save backup before upgrading.",
        "disclaimer2": "After a successful upgrade, the device will automatically reboot after 10 seconds."
      },

      "settingsFile": "Settings file",
      "fw": "Firmware",
      "fs": "Filesystem"
    }
  }
}